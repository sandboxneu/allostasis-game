{"ast":null,"code":"import _classCallCheck from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/src/GameController.js\";\nimport React, { Component } from 'react';\nimport Grid from './Grid/Grid.js';\nimport ConfigurableValuesController from './ConfigurableValuesController.js';\nimport GlobalConstants from './GlobalConstants.js';\nimport LifeBarController from './LifeBars/LifeBarController.js';\nimport ServerUtils from './ServerUtils';\nimport \"./GameController.css\";\nvar ENTER_KEY = 13;\nvar LEFT_KEY = 37;\nvar UP_KEY = 38;\nvar RIGHT_KEY = 39;\nvar DOWN_KEY = 40;\nvar GRID_LENGTH = ConfigurableValuesController.getGridRowLength();\n\nvar GameController =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GameController, _Component);\n\n  function GameController() {\n    var _this;\n\n    _classCallCheck(this, GameController);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GameController).call(this));\n\n    _this._handleKeyDown = function (event) {\n      switch (event.keyCode) {\n        case ENTER_KEY:\n          break;\n\n        case LEFT_KEY:\n          _this._handlePlayerMovement(-1, 0, GlobalConstants.actionEnum.MovedLeft);\n\n          break;\n\n        case UP_KEY:\n          _this._handlePlayerMovement(0, -1, GlobalConstants.actionEnum.MovedUp);\n\n          break;\n\n        case RIGHT_KEY:\n          _this._handlePlayerMovement(1, 0, GlobalConstants.actionEnum.MovedRight);\n\n          break;\n\n        case DOWN_KEY:\n          _this._handlePlayerMovement(0, 1, GlobalConstants.actionEnum.MovedDown);\n\n          break;\n\n        default:\n          break;\n      }\n\n      _this.data.push(_this.generateStateInfo());\n    };\n\n    _this.hasSentData = false;\n    _this.curThirst = ConfigurableValuesController.getInitialThirst();\n    _this.curHunger = ConfigurableValuesController.getInitialHunger();\n    _this.curLoad = ConfigurableValuesController.getInitialLoad();\n    _this.hungerLowerBound = ConfigurableValuesController.getHungerLowerBound();\n    _this.hungerUpperBound = ConfigurableValuesController.getHungerUpperBound();\n    _this.thirstLowerBound = ConfigurableValuesController.getThirstLowerBound();\n    _this.thirstUpperBound = ConfigurableValuesController.getThirstUpperBound();\n    _this.tick = _this.tick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.generateStateInfo = _this.generateStateInfo.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.data = [];\n    _this.loadDelta = 0;\n    _this.loadRate = 2;\n    _this.state = {\n      entities: _this._generateEntities(),\n      playerXPos: ConfigurableValuesController.getInitialXPos(),\n      playerYPos: ConfigurableValuesController.getInitialYPos(),\n      hunger: _this.curHunger,\n      thirst: _this.curThirst,\n      load: _this.curLoad,\n      curTick: 0,\n      lastAction: GlobalConstants.actionEnum.Start\n    };\n    return _this;\n  }\n\n  _createClass(GameController, [{\n    key: \"_generateEntities\",\n    value: function _generateEntities() {\n      var entities = [];\n\n      this._placeEntity(entities, ConfigurableValuesController.getEntityDataWater1());\n\n      this._placeEntity(entities, ConfigurableValuesController.getEntityDataWater2());\n\n      this._placeEntity(entities, ConfigurableValuesController.getEntityDataFood1());\n\n      this._placeEntity(entities, ConfigurableValuesController.getEntityDataFood2());\n\n      return entities;\n    } // Creates a new entity with the specified data and random coordinates,\n    // placing it into the array `entities`\n\n  }, {\n    key: \"_placeEntity\",\n    value: function _placeEntity(entities, new_entity_data) {\n      var random_coord = function random_coord() {\n        return Math.max(Math.min(Math.round(Math.random() * GRID_LENGTH), GRID_LENGTH - 1), 0);\n      };\n\n      var no_placement_conflict = function no_placement_conflict(entity) {\n        return x !== entity.x && y !== entity.y;\n      };\n\n      do {\n        var x = random_coord();\n        var y = random_coord();\n        entities.push({\n          x: x,\n          y: y,\n          data: new_entity_data\n        });\n      } while (entities.every(no_placement_conflict));\n    }\n  }, {\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      document.addEventListener(\"keydown\", this._handleKeyDown.bind(this));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener(\"keydown\", this._handleKeyDown.bind(this));\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"_adjustThirst\",\n    value: function _adjustThirst(num) {\n      var temp = this.curThirst;\n      temp += num;\n\n      if (temp >= 0) {\n        if (temp > 100) {\n          this.curThirst = 100;\n        } else {\n          this.curThirst = temp;\n        }\n      } else {\n        this.curThirst = 0;\n      }\n    }\n  }, {\n    key: \"_adjustHunger\",\n    value: function _adjustHunger(num) {\n      var temp = this.curHunger;\n      temp += num;\n\n      if (temp >= 0) {\n        if (temp > 100) {\n          this.curHunger = 100;\n        } else {\n          this.curHunger = temp;\n        }\n      } else {\n        this.curHunger = 0;\n      }\n    }\n  }, {\n    key: \"_adjustLoad\",\n    value: function _adjustLoad(num) {\n      var temp = this.curLoad;\n      temp += num;\n\n      if (temp >= 0) {\n        if (temp > 100) {\n          this.curLoad = 100;\n        } else {\n          this.curLoad = temp;\n        }\n      } else {\n        this.curLoad = 0;\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.interval = setInterval(this.tick, 1000);\n    }\n  }, {\n    key: \"tick\",\n    value: function tick() {\n      this.setState({\n        curTick: this.state.curTick + 1\n      });\n    }\n  }, {\n    key: \"_loadIncrease\",\n    value: function _loadIncrease() {\n      var thirstSubOptimal = this.curThirst < this.thirstLowerBound || this.curThirst > this.thirstUpperBound;\n      var hungerSubOptimal = this.curHunger < this.hungerLowerBound || this.curHunger > this.hungerUpperBound;\n\n      if (thirstSubOptimal && hungerSubOptimal) {\n        return 2 * this.loadRate;\n      } else if (thirstSubOptimal || hungerSubOptimal) {\n        return this.loadRate;\n      } else {\n        return 0;\n      }\n    }\n  }, {\n    key: \"_handlePlayerMovement\",\n    value: function _handlePlayerMovement(xMov, yMov, move) {\n      var curX = this.state.playerXPos;\n      var curY = this.state.playerYPos;\n      curX += xMov;\n      curY += yMov;\n\n      if (curX >= 0 && curX < ConfigurableValuesController.getGridRowLength() && curY >= 0 && curY < ConfigurableValuesController.getGridRowLength()) {\n        var entitiesHere = this.state.entities.filter(function (e) {\n          return e.x === curX && e.y === curY;\n        });\n        var entityRewards = entitiesHere.reduce(function (total, e) {\n          var rewards = e.data.reward_fn();\n          return {\n            food: total.food + rewards.food,\n            water: total.water + rewards.water\n          };\n        }, {\n          food: ConfigurableValuesController.getMovementHungerDecay(),\n          water: ConfigurableValuesController.getMovementThirstDecay()\n        });\n\n        this._adjustThirst(entityRewards.water);\n\n        this._adjustHunger(entityRewards.food);\n\n        this._adjustLoad(this.loadDelta);\n\n        this.setState({\n          playerXPos: curX,\n          playerYPos: curY,\n          thirst: this.curThirst,\n          hunger: this.curHunger,\n          load: this.curLoad,\n          lastAction: move\n        });\n      }\n    }\n  }, {\n    key: \"generateStateInfo\",\n    value: function generateStateInfo() {\n      return {\n        tick: this.state.curTick,\n        playerPos: [this.state.playerXPos, this.state.playerYPos],\n        lastAction: this.state.lastAction,\n        hunger: this.curHunger,\n        thirst: this.curThirst,\n        load: this.curLoad\n      };\n    }\n  }, {\n    key: \"checkForEndGame\",\n    value: function checkForEndGame() {\n      return this.state.hunger >= 100 || this.state.hunger <= 0 || this.state.thirst >= 100 || this.state.thirst <= 0 || this.state.load >= 100;\n    }\n  }, {\n    key: \"renderEndGame\",\n    value: function renderEndGame() {\n      if (!this.hasSentData) {\n        var finalData = {\n          configValues: ConfigurableValuesController.getConfigurableValues(),\n          data: this.data\n        };\n        ServerUtils.sendData(finalData);\n        this.hasSentData = true;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, \"GAME OVER\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.checkForEndGame()) {\n        return this.renderEndGame();\n      }\n\n      return React.createElement(\"div\", {\n        className: \"gameController\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        gameGrid: this.state.currentGrid,\n        entities: this.state.entities,\n        playerX: this.state.playerXPos,\n        playerY: this.state.playerYPos,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(LifeBarController, {\n        hunger: this.state.hunger,\n        thirst: this.state.thirst,\n        load: this.state.load,\n        hungerRangeBottom: this.hungerLowerBound,\n        hungerRangeTop: this.hungerUpperBound,\n        thirstRangeBottom: this.thirstLowerBound,\n        thirstRangeTop: this.thirstUpperBound,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return GameController;\n}(Component);\n\nexport default GameController;","map":{"version":3,"sources":["/Users/yashshetty/Desktop/Sandbox/allostasis-game/src/GameController.js"],"names":["React","Component","Grid","ConfigurableValuesController","GlobalConstants","LifeBarController","ServerUtils","ENTER_KEY","LEFT_KEY","UP_KEY","RIGHT_KEY","DOWN_KEY","GRID_LENGTH","getGridRowLength","GameController","_handleKeyDown","event","keyCode","_handlePlayerMovement","actionEnum","MovedLeft","MovedUp","MovedRight","MovedDown","data","push","generateStateInfo","hasSentData","curThirst","getInitialThirst","curHunger","getInitialHunger","curLoad","getInitialLoad","hungerLowerBound","getHungerLowerBound","hungerUpperBound","getHungerUpperBound","thirstLowerBound","getThirstLowerBound","thirstUpperBound","getThirstUpperBound","tick","bind","loadDelta","loadRate","state","entities","_generateEntities","playerXPos","getInitialXPos","playerYPos","getInitialYPos","hunger","thirst","load","curTick","lastAction","Start","_placeEntity","getEntityDataWater1","getEntityDataWater2","getEntityDataFood1","getEntityDataFood2","new_entity_data","random_coord","Math","max","min","round","random","no_placement_conflict","entity","x","y","every","document","addEventListener","removeEventListener","clearInterval","interval","num","temp","setInterval","setState","thirstSubOptimal","hungerSubOptimal","xMov","yMov","move","curX","curY","entitiesHere","filter","e","entityRewards","reduce","total","rewards","reward_fn","food","water","getMovementHungerDecay","getMovementThirstDecay","_adjustThirst","_adjustHunger","_adjustLoad","playerPos","finalData","configValues","getConfigurableValues","sendData","checkForEndGame","renderEndGame","currentGrid"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,4BAAP,MAAyC,mCAAzC;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,sBAAP;AAEA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,QAAQ,GAAG,EAAjB;AACA,IAAMC,MAAM,GAAG,EAAf;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,QAAQ,GAAG,EAAjB;AAEA,IAAMC,WAAW,GAAGT,4BAA4B,CAACU,gBAA7B,EAApB;;IAEMC,c;;;;;AAEJ,4BAAc;AAAA;;AAAA;;AACZ;;AADY,UA+DdC,cA/Dc,GA+DG,UAACC,KAAD,EAAW;AAC1B,cAAQA,KAAK,CAACC,OAAd;AACI,aAAKV,SAAL;AACI;;AACJ,aAAKC,QAAL;AACI,gBAAKU,qBAAL,CAA2B,CAAC,CAA5B,EAA+B,CAA/B,EAAkCd,eAAe,CAACe,UAAhB,CAA2BC,SAA7D;;AACA;;AACJ,aAAKX,MAAL;AACI,gBAAKS,qBAAL,CAA2B,CAA3B,EAA8B,CAAC,CAA/B,EAAkCd,eAAe,CAACe,UAAhB,CAA2BE,OAA7D;;AACA;;AACJ,aAAKX,SAAL;AACI,gBAAKQ,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCd,eAAe,CAACe,UAAhB,CAA2BG,UAA5D;;AACA;;AACJ,aAAKX,QAAL;AACI,gBAAKO,qBAAL,CAA2B,CAA3B,EAA8B,CAA9B,EAAiCd,eAAe,CAACe,UAAhB,CAA2BI,SAA5D;;AACA;;AACJ;AACI;AAhBR;;AAkBA,YAAKC,IAAL,CAAUC,IAAV,CAAe,MAAKC,iBAAL,EAAf;AACD,KAnFa;;AAEZ,UAAKC,WAAL,GAAmB,KAAnB;AACA,UAAKC,SAAL,GAAiBzB,4BAA4B,CAAC0B,gBAA7B,EAAjB;AACA,UAAKC,SAAL,GAAiB3B,4BAA4B,CAAC4B,gBAA7B,EAAjB;AACA,UAAKC,OAAL,GAAe7B,4BAA4B,CAAC8B,cAA7B,EAAf;AACA,UAAKC,gBAAL,GAAwB/B,4BAA4B,CAACgC,mBAA7B,EAAxB;AACA,UAAKC,gBAAL,GAAwBjC,4BAA4B,CAACkC,mBAA7B,EAAxB;AACA,UAAKC,gBAAL,GAAwBnC,4BAA4B,CAACoC,mBAA7B,EAAxB;AACA,UAAKC,gBAAL,GAAwBrC,4BAA4B,CAACsC,mBAA7B,EAAxB;AACA,UAAKC,IAAL,GAAY,MAAKA,IAAL,CAAUC,IAAV,uDAAZ;AACA,UAAKjB,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBiB,IAAvB,uDAAzB;AACA,UAAKnB,IAAL,GAAY,EAAZ;AACA,UAAKoB,SAAL,GAAiB,CAAjB;AACA,UAAKC,QAAL,GAAgB,CAAhB;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,MAAKC,iBAAL,EADC;AAEXC,MAAAA,UAAU,EAAE9C,4BAA4B,CAAC+C,cAA7B,EAFD;AAGXC,MAAAA,UAAU,EAAEhD,4BAA4B,CAACiD,cAA7B,EAHD;AAIXC,MAAAA,MAAM,EAAE,MAAKvB,SAJF;AAKXwB,MAAAA,MAAM,EAAE,MAAK1B,SALF;AAMX2B,MAAAA,IAAI,EAAE,MAAKvB,OANA;AAOXwB,MAAAA,OAAO,EAAE,CAPE;AAQXC,MAAAA,UAAU,EAAErD,eAAe,CAACe,UAAhB,CAA2BuC;AAR5B,KAAb;AAhBY;AA0Bb;;;;wCAEmB;AAClB,UAAIX,QAAQ,GAAG,EAAf;;AACA,WAAKY,YAAL,CAAkBZ,QAAlB,EAA4B5C,4BAA4B,CAACyD,mBAA7B,EAA5B;;AACA,WAAKD,YAAL,CAAkBZ,QAAlB,EAA4B5C,4BAA4B,CAAC0D,mBAA7B,EAA5B;;AACA,WAAKF,YAAL,CAAkBZ,QAAlB,EAA4B5C,4BAA4B,CAAC2D,kBAA7B,EAA5B;;AACA,WAAKH,YAAL,CAAkBZ,QAAlB,EAA4B5C,4BAA4B,CAAC4D,kBAA7B,EAA5B;;AACA,aAAOhB,QAAP;AACD,K,CAED;AACA;;;;iCACaA,Q,EAAUiB,e,EAAiB;AACtC,UAAIC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,eAAOC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASF,IAAI,CAACG,KAAL,CAAWH,IAAI,CAACI,MAAL,KAAgB1D,WAA3B,CAAT,EAAkDA,WAAW,GAAG,CAAhE,CAAT,EAA6E,CAA7E,CAAP;AACD,OAFD;;AAGA,UAAI2D,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,MAAM,EAAI;AACpC,eAAOC,CAAC,KAAKD,MAAM,CAACC,CAAb,IAAkBC,CAAC,KAAKF,MAAM,CAACE,CAAtC;AACD,OAFD;;AAIA,SAAG;AACD,YAAID,CAAC,GAAGR,YAAY,EAApB;AACA,YAAIS,CAAC,GAAGT,YAAY,EAApB;AACAlB,QAAAA,QAAQ,CAACtB,IAAT,CAAc;AAACgD,UAAAA,CAAC,EAADA,CAAD;AAAIC,UAAAA,CAAC,EAADA,CAAJ;AAAOlD,UAAAA,IAAI,EAAEwC;AAAb,SAAd;AACD,OAJD,QAIQjB,QAAQ,CAAC4B,KAAT,CAAeJ,qBAAf,CAJR;AAKD;;;yCAEmB;AAClBK,MAAAA,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,EAAqC,KAAK9D,cAAL,CAAoB4B,IAApB,CAAyB,IAAzB,CAArC;AACD;;;2CAEsB;AACrBiC,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwC,KAAK/D,cAAL,CAAoB4B,IAApB,CAAyB,IAAzB,CAAxC;AACAoC,MAAAA,aAAa,CAAC,KAAKC,QAAN,CAAb;AACD;;;kCAwBaC,G,EAAK;AACjB,UAAIC,IAAI,GAAG,KAAKtD,SAAhB;AACAsD,MAAAA,IAAI,IAAID,GAAR;;AACA,UAAIC,IAAI,IAAI,CAAZ,EAAe;AACb,YAAIA,IAAI,GAAG,GAAX,EAAgB;AACd,eAAKtD,SAAL,GAAiB,GAAjB;AACD,SAFD,MAEO;AACL,eAAKA,SAAL,GAAiBsD,IAAjB;AACD;AACF,OAND,MAMO;AACL,aAAKtD,SAAL,GAAiB,CAAjB;AACD;AACF;;;kCAEaqD,G,EAAK;AACjB,UAAIC,IAAI,GAAG,KAAKpD,SAAhB;AACAoD,MAAAA,IAAI,IAAID,GAAR;;AACA,UAAIC,IAAI,IAAI,CAAZ,EAAe;AACb,YAAIA,IAAI,GAAG,GAAX,EAAgB;AACd,eAAKpD,SAAL,GAAiB,GAAjB;AACD,SAFD,MAEO;AACL,eAAKA,SAAL,GAAiBoD,IAAjB;AACD;AACF,OAND,MAMO;AACL,aAAKpD,SAAL,GAAiB,CAAjB;AACD;AACF;;;gCAEWmD,G,EAAK;AACf,UAAIC,IAAI,GAAG,KAAKlD,OAAhB;AACAkD,MAAAA,IAAI,IAAID,GAAR;;AACA,UAAIC,IAAI,IAAI,CAAZ,EAAe;AACb,YAAIA,IAAI,GAAG,GAAX,EAAgB;AACd,eAAKlD,OAAL,GAAe,GAAf;AACD,SAFD,MAEO;AACL,eAAKA,OAAL,GAAekD,IAAf;AACD;AACF,OAND,MAMO;AACL,aAAKlD,OAAL,GAAe,CAAf;AACD;AACF;;;wCAEmB;AAClB,WAAKgD,QAAL,GAAgBG,WAAW,CAAC,KAAKzC,IAAN,EAAY,IAAZ,CAA3B;AACD;;;2BAEM;AACL,WAAK0C,QAAL,CAAc;AACZ5B,QAAAA,OAAO,EAAE,KAAKV,KAAL,CAAWU,OAAX,GAAqB;AADlB,OAAd;AAGD;;;oCAEe;AACd,UAAI6B,gBAAgB,GAAG,KAAKzD,SAAL,GAAiB,KAAKU,gBAAtB,IAA0C,KAAKV,SAAL,GAAiB,KAAKY,gBAAvF;AACA,UAAI8C,gBAAgB,GAAG,KAAKxD,SAAL,GAAiB,KAAKI,gBAAtB,IAA0C,KAAKJ,SAAL,GAAiB,KAAKM,gBAAvF;;AAEA,UAAIiD,gBAAgB,IAAIC,gBAAxB,EAA0C;AACxC,eAAO,IAAI,KAAKzC,QAAhB;AACD,OAFD,MAEO,IAAIwC,gBAAgB,IAAIC,gBAAxB,EAA0C;AAC/C,eAAO,KAAKzC,QAAZ;AACD,OAFM,MAEA;AACL,eAAO,CAAP;AACD;AACF;;;0CACqB0C,I,EAAMC,I,EAAMC,I,EAAM;AACtC,UAAIC,IAAI,GAAG,KAAK5C,KAAL,CAAWG,UAAtB;AACA,UAAI0C,IAAI,GAAG,KAAK7C,KAAL,CAAWK,UAAtB;AACAuC,MAAAA,IAAI,IAAIH,IAAR;AACAI,MAAAA,IAAI,IAAIH,IAAR;;AAEA,UAAIE,IAAI,IAAI,CAAR,IAAaA,IAAI,GAAGvF,4BAA4B,CAACU,gBAA7B,EAApB,IACG8E,IAAI,IAAI,CADX,IACgBA,IAAI,GAAGxF,4BAA4B,CAACU,gBAA7B,EAD3B,EAC4E;AAC1E,YAAI+E,YAAY,GAAG,KAAK9C,KAAL,CAAWC,QAAX,CAAoB8C,MAApB,CAA2B,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACrB,CAAF,KAAQiB,IAAR,IAAgBI,CAAC,CAACpB,CAAF,KAAQiB,IAA5B;AAAA,SAA5B,CAAnB;AACA,YAAII,aAAa,GAAGH,YAAY,CAACI,MAAb,CAAoB,UAACC,KAAD,EAAQH,CAAR,EAAc;AACpD,cAAII,OAAO,GAAGJ,CAAC,CAACtE,IAAF,CAAO2E,SAAP,EAAd;AACA,iBAAO;AACLC,YAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,GAAaF,OAAO,CAACE,IADtB;AAELC,YAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAN,GAAcH,OAAO,CAACG;AAFxB,WAAP;AAID,SANmB,EAMjB;AACDD,UAAAA,IAAI,EAAEjG,4BAA4B,CAACmG,sBAA7B,EADL;AAEDD,UAAAA,KAAK,EAAElG,4BAA4B,CAACoG,sBAA7B;AAFN,SANiB,CAApB;;AAUA,aAAKC,aAAL,CAAmBT,aAAa,CAACM,KAAjC;;AACA,aAAKI,aAAL,CAAmBV,aAAa,CAACK,IAAjC;;AACA,aAAKM,WAAL,CAAiB,KAAK9D,SAAtB;;AACA,aAAKwC,QAAL,CAAc;AACZnC,UAAAA,UAAU,EAAEyC,IADA;AAEZvC,UAAAA,UAAU,EAAEwC,IAFA;AAGZrC,UAAAA,MAAM,EAAE,KAAK1B,SAHD;AAIZyB,UAAAA,MAAM,EAAE,KAAKvB,SAJD;AAKZyB,UAAAA,IAAI,EAAE,KAAKvB,OALC;AAMZyB,UAAAA,UAAU,EAAEgC;AANA,SAAd;AAQD;AAEF;;;wCAEmB;AAClB,aAAO;AACL/C,QAAAA,IAAI,EAAG,KAAKI,KAAL,CAAWU,OADb;AAELmD,QAAAA,SAAS,EAAE,CAAC,KAAK7D,KAAL,CAAWG,UAAZ,EAAwB,KAAKH,KAAL,CAAWK,UAAnC,CAFN;AAGLM,QAAAA,UAAU,EAAE,KAAKX,KAAL,CAAWW,UAHlB;AAILJ,QAAAA,MAAM,EAAE,KAAKvB,SAJR;AAKLwB,QAAAA,MAAM,EAAE,KAAK1B,SALR;AAML2B,QAAAA,IAAI,EAAE,KAAKvB;AANN,OAAP;AAQD;;;sCAEiB;AAChB,aAAO,KAAKc,KAAL,CAAWO,MAAX,IAAqB,GAArB,IAA4B,KAAKP,KAAL,CAAWO,MAAX,IAAqB,CAAjD,IAAsD,KAAKP,KAAL,CAAWQ,MAAX,IAAqB,GAA3E,IAAkF,KAAKR,KAAL,CAAWQ,MAAX,IAAoB,CAAtG,IAA2G,KAAKR,KAAL,CAAWS,IAAX,IAAmB,GAArI;AACD;;;oCAEe;AACd,UAAI,CAAC,KAAK5B,WAAV,EAAuB;AACrB,YAAIiF,SAAS,GAAE;AACbC,UAAAA,YAAY,EAAE1G,4BAA4B,CAAC2G,qBAA7B,EADD;AAEbtF,UAAAA,IAAI,EAAE,KAAKA;AAFE,SAAf;AAIAlB,QAAAA,WAAW,CAACyG,QAAZ,CAAqBH,SAArB;AACA,aAAKjF,WAAL,GAAmB,IAAnB;AACD;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ;AAMD;;;6BAEQ;AACP,UAAI,KAAKqF,eAAL,EAAJ,EAA4B;AAC1B,eAAO,KAAKC,aAAL,EAAP;AACD;;AACD,aACE;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAI,KAAKnE,KAAL,CAAWoE,WADzB;AAEE,QAAA,QAAQ,EAAI,KAAKpE,KAAL,CAAWC,QAFzB;AAGE,QAAA,OAAO,EAAI,KAAKD,KAAL,CAAWG,UAHxB;AAIE,QAAA,OAAO,EAAI,KAAKH,KAAL,CAAWK,UAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,oBAAC,iBAAD;AACE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWO,MADrB;AAEE,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAFrB;AAGE,QAAA,IAAI,EAAE,KAAKR,KAAL,CAAWS,IAHnB;AAIE,QAAA,iBAAiB,EAAE,KAAKrB,gBAJ1B;AAKE,QAAA,cAAc,EAAE,KAAKE,gBALvB;AAME,QAAA,iBAAiB,EAAE,KAAKE,gBAN1B;AAOE,QAAA,cAAc,EAAE,KAAKE,gBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,CADF;AAiBD;;;;EA9O0BvC,S;;AAiP7B,eAAea,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport Grid from './Grid/Grid.js'\nimport ConfigurableValuesController from './ConfigurableValuesController.js';\nimport GlobalConstants from './GlobalConstants.js';\nimport LifeBarController from './LifeBars/LifeBarController.js';\nimport ServerUtils from './ServerUtils';\nimport \"./GameController.css\";\n\nconst ENTER_KEY = 13;\nconst LEFT_KEY = 37;\nconst UP_KEY = 38;\nconst RIGHT_KEY = 39;\nconst DOWN_KEY = 40;\n\nconst GRID_LENGTH = ConfigurableValuesController.getGridRowLength();\n\nclass GameController extends Component { \n\n  constructor() {\n    super();\n    this.hasSentData = false;\n    this.curThirst = ConfigurableValuesController.getInitialThirst();\n    this.curHunger = ConfigurableValuesController.getInitialHunger();\n    this.curLoad = ConfigurableValuesController.getInitialLoad();\n    this.hungerLowerBound = ConfigurableValuesController.getHungerLowerBound();\n    this.hungerUpperBound = ConfigurableValuesController.getHungerUpperBound();\n    this.thirstLowerBound = ConfigurableValuesController.getThirstLowerBound();\n    this.thirstUpperBound = ConfigurableValuesController.getThirstUpperBound();\n    this.tick = this.tick.bind(this);\n    this.generateStateInfo = this.generateStateInfo.bind(this);\n    this.data = []\n    this.loadDelta = 0\n    this.loadRate = 2\n\n    this.state = {\n      entities: this._generateEntities(),\n      playerXPos: ConfigurableValuesController.getInitialXPos(),\n      playerYPos: ConfigurableValuesController.getInitialYPos(),\n      hunger: this.curHunger,\n      thirst: this.curThirst,\n      load: this.curLoad,\n      curTick: 0,\n      lastAction: GlobalConstants.actionEnum.Start\n    }\n  }\n\n  _generateEntities() {\n    let entities = [];\n    this._placeEntity(entities, ConfigurableValuesController.getEntityDataWater1());\n    this._placeEntity(entities, ConfigurableValuesController.getEntityDataWater2());\n    this._placeEntity(entities, ConfigurableValuesController.getEntityDataFood1());\n    this._placeEntity(entities, ConfigurableValuesController.getEntityDataFood2());\n    return entities;\n  }\n\n  // Creates a new entity with the specified data and random coordinates,\n  // placing it into the array `entities`\n  _placeEntity(entities, new_entity_data) {\n    let random_coord = () => {\n      return Math.max(Math.min(Math.round(Math.random() * GRID_LENGTH), GRID_LENGTH - 1), 0);\n    };\n    let no_placement_conflict = entity => {\n      return x !== entity.x && y !== entity.y;\n    }\n\n    do {\n      var x = random_coord();\n      var y = random_coord();\n      entities.push({x, y, data: new_entity_data});\n    } while(entities.every(no_placement_conflict));\n  }\n  \n  componentWillMount(){\n    document.addEventListener(\"keydown\", this._handleKeyDown.bind(this));\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this._handleKeyDown.bind(this));\n    clearInterval(this.interval)\n  }\n\n  _handleKeyDown = (event) => {\n    switch( event.keyCode ) {\n        case ENTER_KEY:\n            break;\n        case LEFT_KEY:\n            this._handlePlayerMovement(-1, 0, GlobalConstants.actionEnum.MovedLeft);\n            break;  \n        case UP_KEY:\n            this._handlePlayerMovement(0, -1, GlobalConstants.actionEnum.MovedUp);\n            break;\n        case RIGHT_KEY:\n            this._handlePlayerMovement(1, 0, GlobalConstants.actionEnum.MovedRight);\n            break;\n        case DOWN_KEY:\n            this._handlePlayerMovement(0, 1, GlobalConstants.actionEnum.MovedDown);\n            break;    \n        default: \n            break;\n    }\n    this.data.push(this.generateStateInfo())\n  }\n\n  _adjustThirst(num) {\n    let temp = this.curThirst;\n    temp += num\n    if (temp >= 0) {\n      if (temp > 100) {\n        this.curThirst = 100;\n      } else {\n        this.curThirst = temp;\n      }\n    } else {\n      this.curThirst = 0;\n    }\n  }\n\n  _adjustHunger(num) {\n    let temp = this.curHunger;\n    temp += num\n    if (temp >= 0) {\n      if (temp > 100) {\n        this.curHunger = 100;\n      } else {\n        this.curHunger = temp;\n      }\n    } else {\n      this.curHunger = 0;\n    }\n  }\n\n  _adjustLoad(num) {\n    let temp = this.curLoad;\n    temp += num\n    if (temp >= 0) {\n      if (temp > 100) {\n        this.curLoad = 100;\n      } else {\n        this.curLoad = temp;\n      }\n    } else {\n      this.curLoad = 0;\n    }\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(this.tick, 1000);\n  }\n\n  tick() {\n    this.setState({\n      curTick: this.state.curTick + 1\n    });\n  }\n\n  _loadIncrease() {\n    let thirstSubOptimal = this.curThirst < this.thirstLowerBound || this.curThirst > this.thirstUpperBound\n    let hungerSubOptimal = this.curHunger < this.hungerLowerBound || this.curHunger > this.hungerUpperBound\n\n    if (thirstSubOptimal && hungerSubOptimal) {\n      return 2 * this.loadRate\n    } else if (thirstSubOptimal || hungerSubOptimal) {\n      return this.loadRate\n    } else {\n      return 0\n    }\n  }\n  _handlePlayerMovement(xMov, yMov, move) {\n    let curX = this.state.playerXPos;\n    let curY = this.state.playerYPos;\n    curX += xMov;\n    curY += yMov;\n\n    if (curX >= 0 && curX < ConfigurableValuesController.getGridRowLength() \n        && curY >= 0 && curY < ConfigurableValuesController.getGridRowLength()) {\n      let entitiesHere = this.state.entities.filter(e => e.x === curX && e.y === curY);\n      let entityRewards = entitiesHere.reduce((total, e) => {\n        let rewards = e.data.reward_fn();\n        return {\n          food: total.food + rewards.food,\n          water: total.water + rewards.water,\n        }\n      }, {\n        food: ConfigurableValuesController.getMovementHungerDecay(),\n        water: ConfigurableValuesController.getMovementThirstDecay(),\n      });\n      this._adjustThirst(entityRewards.water);\n      this._adjustHunger(entityRewards.food);\n      this._adjustLoad(this.loadDelta);\n      this.setState({\n        playerXPos: curX,\n        playerYPos: curY,\n        thirst: this.curThirst,\n        hunger: this.curHunger,\n        load: this.curLoad,\n        lastAction: move\n      });\n    }\n    \n  }\n\n  generateStateInfo() {\n    return({\n      tick : this.state.curTick,\n      playerPos: [this.state.playerXPos, this.state.playerYPos],\n      lastAction: this.state.lastAction,\n      hunger: this.curHunger,\n      thirst: this.curThirst,\n      load: this.curLoad\n    });\n  }\n\n  checkForEndGame() {\n    return this.state.hunger >= 100 || this.state.hunger <= 0 || this.state.thirst >= 100 || this.state.thirst <=0 || this.state.load >= 100;\n  }\n\n  renderEndGame() {\n    if (!this.hasSentData) {\n      let finalData ={\n        configValues: ConfigurableValuesController.getConfigurableValues(),\n        data: this.data\n      };\n      ServerUtils.sendData(finalData)\n      this.hasSentData = true;\n    }\n    return (\n        <div>\n          GAME OVER\n        </div>\n\n      );\n  }\n\n  render() {\n    if (this.checkForEndGame()) {\n      return this.renderEndGame();\n    }\n    return (\n      <div className=\"gameController\">\n        <Grid\n          gameGrid = {this.state.currentGrid}\n          entities = {this.state.entities}\n          playerX = {this.state.playerXPos}\n          playerY = {this.state.playerYPos}/>\n        <LifeBarController\n          hunger={this.state.hunger}\n          thirst={this.state.thirst}\n          load={this.state.load}\n          hungerRangeBottom={this.hungerLowerBound}\n          hungerRangeTop={this.hungerUpperBound}\n          thirstRangeBottom={this.thirstLowerBound}\n          thirstRangeTop={this.thirstUpperBound}/>\n      </div>\n    );\n  }\n}\n\nexport default GameController;\n"]},"metadata":{},"sourceType":"module"}