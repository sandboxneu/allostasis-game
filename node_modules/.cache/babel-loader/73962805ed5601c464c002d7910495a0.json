{"ast":null,"code":"import _classCallCheck from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yashshetty/Desktop/Sandbox/allostasis-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _ from 'lodash';\n\nvar gaussian = require('gaussian');\n\nvar ConfigurableValuesController =\n/*#__PURE__*/\nfunction () {\n  function ConfigurableValuesController() {\n    _classCallCheck(this, ConfigurableValuesController);\n\n    this.gridRowLength = 10;\n    this.initialLoad = 0;\n    this.loadRate = 2;\n    this.meanWater1 = 2;\n    this.varianceWater1 = 1;\n    this.meanWater2 = 4;\n    this.varianceWater2 = 3;\n    this.meanFood1 = 2;\n    this.varianceFood1 = 1;\n    this.meanFood2 = 4;\n    this.varianceFood2 = 3;\n    this.movementThirstDecay = -1;\n    this.movementHungerDecay = -1;\n    this.shouldShowImages = true;\n    this.foodOneImage = null;\n    this.foodTwoImage = null;\n    this.waterOneImage = null;\n    this.waterTwoImage = null;\n    this.hungerUpperBound = 80;\n    this.hungerLowerBound = 60;\n    this.thirstUpperBound = 75;\n    this.thirstLowerBound = 55;\n    this.setupDefaultImages();\n  }\n\n  _createClass(ConfigurableValuesController, [{\n    key: \"update\",\n    value: function update(configValues) {\n      this.gridRowLength = _.get(configValues, 'gridRowLength', 10);\n      this.initialLoad = _.get(configValues, \"initialLoad\", 0);\n      this.loadRate = _.get(configValues, \"loadRate\", 2);\n      this.meanWater1 = _.get(configValues, \"meanWater1\", 2);\n      this.varianceWater1 = _.get(configValues, \"varianceWater1\", 1);\n      this.meanWater2 = _.get(configValues, \"meanWater2\", 4);\n      this.varianceWater2 = _.get(configValues, \"varianceWater2\", 3);\n      this.meanFood1 = _.get(configValues, \"meanFood1\", 2);\n      this.varianceFood1 = _.get(configValues, \"varianceFood1\", 1);\n      this.meanFood2 = _.get(configValues, \"meanFood2\", 4);\n      this.varianceFood2 = _.get(configValues, \"varianceFood2\", 3);\n      this.movementThirstDecay = _.get(configValues, \"movementThirstDecay\", -1);\n      this.movementHungerDecay = _.get(configValues, \"movementHungerDecay\", -1);\n      this.shouldShowImages = _.get(configValues, \"shouldShowImages\", true);\n      this.foodOneImage = _.get(configValues, \"foodOneImage\", null);\n      this.foodTwoImage = _.get(configValues, \"foodTwoImage\", null);\n      this.waterOneImage = _.get(configValues, \"waterOneImage\", null);\n      this.waterTwoImage = _.get(configValues, \"waterTwoImage\", null);\n      this.hungerUpperBound = _.get(configValues, \"hungerUpperBound\", 80);\n      this.hungerLowerBound = _.get(configValues, \"hungerLowerBound\", 60);\n      this.thirstUpperBound = _.get(configValues, \"thirstUpperBound\", 75);\n      this.thirstLowerBound = _.get(configValues, \"thirstLowerBound\", 55);\n\n      if (this.foodOneImage == null || this.foodTwoImage == null || this.waterOneImage == null || this.waterTwoImage == null) {\n        this.setupDefaultImages();\n      }\n    }\n  }, {\n    key: \"getEntityDataWater1\",\n    value: function getEntityDataWater1() {\n      var distribution = gaussian(this.meanWater1, this.varianceWater1);\n      return {\n        image: this.waterOneImage,\n        name: 'W1',\n        reward_fn: function reward_fn() {\n          return {\n            food: 0,\n            water: distribution.ppf(Math.random())\n          };\n        }\n      };\n    }\n  }, {\n    key: \"getEntityDataWater2\",\n    value: function getEntityDataWater2() {\n      var distribution = gaussian(this.meanWater2, this.varianceWater2);\n      return {\n        image: this.waterTwoImage,\n        name: 'W2',\n        reward_fn: function reward_fn() {\n          return {\n            food: 0,\n            water: distribution.ppf(Math.random())\n          };\n        }\n      };\n    }\n  }, {\n    key: \"getEntityDataFood1\",\n    value: function getEntityDataFood1() {\n      var distribution = gaussian(this.meanFood1, this.varianceFood1);\n      return {\n        image: this.foodOneImage,\n        name: 'F1',\n        reward_fn: function reward_fn() {\n          return {\n            food: distribution.ppf(Math.random()),\n            water: 0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"getEntityDataFood2\",\n    value: function getEntityDataFood2() {\n      var distribution = gaussian(this.meanFood2, this.varianceFood2);\n      return {\n        image: this.foodTwoImage,\n        name: 'F2',\n        reward_fn: function reward_fn() {\n          return {\n            food: distribution.ppf(Math.random()),\n            water: 0\n          };\n        }\n      };\n    }\n  }, {\n    key: \"getMovementThirstDecay\",\n    value: function getMovementThirstDecay() {\n      return this.movementThirstDecay;\n    }\n  }, {\n    key: \"getMovementHungerDecay\",\n    value: function getMovementHungerDecay() {\n      return this.movementHungerDecay;\n    }\n  }, {\n    key: \"setupDefaultImages\",\n    value: function setupDefaultImages() {\n      this.foodOneImage = 'assets/treeone.png';\n      this.foodTwoImage = 'assets/treetwo.png';\n      this.waterOneImage = 'assets/waterone.png';\n      this.waterTwoImage = 'assets/watertwo.png';\n    }\n  }, {\n    key: \"getGridRowLength\",\n    value: function getGridRowLength() {\n      return this.gridRowLength;\n    }\n  }, {\n    key: \"getGridSize\",\n    value: function getGridSize() {\n      return 500 / this.getGridRowLength();\n    }\n  }, {\n    key: \"getInitialXPos\",\n    value: function getInitialXPos() {\n      return Math.floor(this.getGridRowLength() / 2);\n    }\n  }, {\n    key: \"getInitialYPos\",\n    value: function getInitialYPos() {\n      return Math.floor(this.getGridRowLength() / 2);\n    }\n  }, {\n    key: \"getHungerLowerBound\",\n    value: function getHungerLowerBound() {\n      return this.hungerLowerBound;\n    }\n  }, {\n    key: \"getHungerUpperBound\",\n    value: function getHungerUpperBound() {\n      return this.hungerUpperBound;\n    }\n  }, {\n    key: \"getInitialHunger\",\n    value: function getInitialHunger() {\n      return (this.getHungerLowerBound() + this.getHungerUpperBound()) / 2;\n    }\n  }, {\n    key: \"getThirstLowerBound\",\n    value: function getThirstLowerBound() {\n      return this.thirstLowerBound;\n    }\n  }, {\n    key: \"getThirstUpperBound\",\n    value: function getThirstUpperBound() {\n      return this.thirstUpperBound;\n    }\n  }, {\n    key: \"getInitialThirst\",\n    value: function getInitialThirst() {\n      return (this.getThirstLowerBound() + this.getThirstUpperBound()) / 2;\n    }\n  }, {\n    key: \"getInitialLoad\",\n    value: function getInitialLoad() {\n      return this.initialLoad;\n    }\n  }, {\n    key: \"shouldShowImages\",\n    value: function shouldShowImages() {\n      return this.shouldShowImages;\n    }\n  }, {\n    key: \"getWaterOneImage\",\n    value: function getWaterOneImage() {\n      return this.waterOneImage;\n    }\n  }, {\n    key: \"getWaterTwoImage\",\n    value: function getWaterTwoImage() {\n      return this.waterTwoImage;\n    }\n  }, {\n    key: \"getFoodOneImage\",\n    value: function getFoodOneImage() {\n      return this.foodOneImage;\n    }\n  }, {\n    key: \"getFoodTwoImage\",\n    value: function getFoodTwoImage() {\n      return this.foodTwoImage;\n    }\n  }, {\n    key: \"getConfigurableValues\",\n    value: function getConfigurableValues() {\n      return {\n        rowLength: this.gridRowLength,\n        initialLoad: this.initialLoad,\n        loadRate: this.loadRate,\n        meanWater1: this.meanWater1,\n        varianceWater1: this.varianceWater1,\n        meanWater2: this.meanWater2,\n        varianceWater2: this.varianceWater2,\n        meanFood1: this.meanFood1,\n        varianceFood1: this.varianceFood1,\n        meanFood2: this.meanFood2,\n        varianceFood2: this.varianceFood2,\n        movementThirstDecay: this.movementThirstDecay,\n        movementHungerDecay: this.movementHungerDecay,\n        hungerUpperBound: this.hungerUpperBound,\n        hungerLowerBound: this.hungerLowerBound,\n        thirstUpperBound: this.thirstUpperBound,\n        thirstLowerBound: this.thirstLowerBound\n      };\n    }\n  }]);\n\n  return ConfigurableValuesController;\n}();\n\nexport default new ConfigurableValuesController();","map":{"version":3,"sources":["/Users/yashshetty/Desktop/Sandbox/allostasis-game/src/ConfigurableValuesController.js"],"names":["_","gaussian","require","ConfigurableValuesController","gridRowLength","initialLoad","loadRate","meanWater1","varianceWater1","meanWater2","varianceWater2","meanFood1","varianceFood1","meanFood2","varianceFood2","movementThirstDecay","movementHungerDecay","shouldShowImages","foodOneImage","foodTwoImage","waterOneImage","waterTwoImage","hungerUpperBound","hungerLowerBound","thirstUpperBound","thirstLowerBound","setupDefaultImages","configValues","get","distribution","image","name","reward_fn","food","water","ppf","Math","random","getGridRowLength","floor","getHungerLowerBound","getHungerUpperBound","getThirstLowerBound","getThirstUpperBound","rowLength"],"mappings":"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","sourcesContent":["import _ from 'lodash';\n\nconst gaussian = require('gaussian');\n\nclass ConfigurableValuesController {\n  constructor() {\n    this.gridRowLength = 10;\n    this.initialLoad = 0; \n    this.loadRate = 2;\n    this.meanWater1 = 2;\n    this.varianceWater1 = 1;\n    this.meanWater2 = 4;\n    this.varianceWater2 = 3;\n    this.meanFood1 = 2;\n    this.varianceFood1 = 1;\n    this.meanFood2 = 4;\n    this.varianceFood2 = 3;\n    this.movementThirstDecay = -1;\n    this.movementHungerDecay = -1;\n    this.shouldShowImages = true;\n    this.foodOneImage = null;\n    this.foodTwoImage = null;\n    this.waterOneImage = null;\n    this.waterTwoImage = null;\n    this.hungerUpperBound = 80;\n    this.hungerLowerBound = 60;\n    this.thirstUpperBound = 75;\n    this.thirstLowerBound = 55;\n\n    this.setupDefaultImages();\n  }\n\n  update(configValues) {\n    this.gridRowLength = _.get(configValues, 'gridRowLength', 10);\n    this.initialLoad = _.get(configValues, \"initialLoad\", 0);\n    this.loadRate = _.get(configValues, \"loadRate\", 2)\n    this.meanWater1 = _.get(configValues, \"meanWater1\", 2);\n    this.varianceWater1 = _.get(configValues, \"varianceWater1\", 1);\n    this.meanWater2 = _.get(configValues, \"meanWater2\", 4);\n    this.varianceWater2 = _.get(configValues, \"varianceWater2\", 3);\n    this.meanFood1 = _.get(configValues, \"meanFood1\", 2);\n    this.varianceFood1 = _.get(configValues, \"varianceFood1\", 1);\n    this.meanFood2 = _.get(configValues, \"meanFood2\", 4);\n    this.varianceFood2 = _.get(configValues, \"varianceFood2\", 3);\n    this.movementThirstDecay = _.get(configValues, \"movementThirstDecay\", -1);\n    this.movementHungerDecay = _.get(configValues, \"movementHungerDecay\", -1);\n    this.shouldShowImages = _.get(configValues, \"shouldShowImages\", true);\n    this.foodOneImage = _.get(configValues, \"foodOneImage\", null);\n    this.foodTwoImage = _.get(configValues, \"foodTwoImage\", null);\n    this.waterOneImage = _.get(configValues, \"waterOneImage\", null);\n    this.waterTwoImage = _.get(configValues, \"waterTwoImage\", null);\n    this.hungerUpperBound = _.get(configValues, \"hungerUpperBound\", 80);\n    this.hungerLowerBound = _.get(configValues, \"hungerLowerBound\", 60);\n    this.thirstUpperBound = _.get(configValues, \"thirstUpperBound\", 75);\n    this.thirstLowerBound = _.get(configValues, \"thirstLowerBound\", 55);\n\n    if (this.foodOneImage == null || this.foodTwoImage == null || this.waterOneImage == null || this.waterTwoImage == null) {\n      this.setupDefaultImages();\n    }\n  }\n\n  getEntityDataWater1() {\n    let distribution = gaussian(this.meanWater1, this.varianceWater1);\n    return {\n      image: this.waterOneImage,\n      name: 'W1',\n      reward_fn: () => {\n        return {\n          food: 0,\n          water: distribution.ppf(Math.random()),\n        }\n      },\n    }\n  }\n\n  getEntityDataWater2() {\n    let distribution = gaussian(this.meanWater2, this.varianceWater2);\n    return {\n      image: this.waterTwoImage,\n      name: 'W2',\n      reward_fn: () => {\n        return {\n          food: 0,\n          water: distribution.ppf(Math.random()),\n        }\n      },\n    }\n  }\n\n  getEntityDataFood1() {\n    let distribution = gaussian(this.meanFood1, this.varianceFood1);\n    return {\n      image: this.foodOneImage,\n      name: 'F1',\n      reward_fn: () => {\n        return {\n          food: distribution.ppf(Math.random()),\n          water: 0,\n        }\n      },\n    }\n  }\n\n  getEntityDataFood2() {\n    let distribution = gaussian(this.meanFood2, this.varianceFood2);\n    return {\n      image: this.foodTwoImage,\n      name: 'F2',\n      reward_fn: () => {\n        return {\n          food: distribution.ppf(Math.random()),\n          water: 0,\n        }\n      },\n    }\n  }\n\n  getMovementThirstDecay() {\n    return this.movementThirstDecay;\n  }\n\n  getMovementHungerDecay() {\n    return this.movementHungerDecay;\n  }\n\n  setupDefaultImages() {\n    this.foodOneImage = 'assets/treeone.png';\n    this.foodTwoImage = 'assets/treetwo.png';\n    this.waterOneImage = 'assets/waterone.png';\n    this.waterTwoImage = 'assets/watertwo.png';\n  }\n\n  getGridRowLength() {\n    return this.gridRowLength;\n  }\n\n  getGridSize() {\n    return 500/this.getGridRowLength();\n  }\n\n  getInitialXPos() {\n    return Math.floor(this.getGridRowLength()/2);\n  }\n\n  getInitialYPos() {\n    return Math.floor(this.getGridRowLength()/2);\n  }\n\n  getHungerLowerBound() {\n    return this.hungerLowerBound;\n  }\n\n  getHungerUpperBound() {\n    return this.hungerUpperBound;\n  }\n\n  getInitialHunger() {\n    return (this.getHungerLowerBound() + this.getHungerUpperBound()) / 2;\n  }\n\n  getThirstLowerBound() {\n    return this.thirstLowerBound;\n  }\n\n  getThirstUpperBound() {\n    return this.thirstUpperBound;\n  }\n\n  getInitialThirst() {\n    return (this.getThirstLowerBound() + this.getThirstUpperBound()) / 2;\n  }\n\n  getInitialLoad() {\n    return this.initialLoad;\n  }\n\n  shouldShowImages() {\n    return this.shouldShowImages;\n  }\n\n  getWaterOneImage() {\n    return this.waterOneImage;\n  }\n\n  getWaterTwoImage() {\n    return this.waterTwoImage;\n  }\n\n  getFoodOneImage() {\n    return this.foodOneImage;\n  }\n\n  getFoodTwoImage() {\n    return this.foodTwoImage;\n  }\n\n  getConfigurableValues() {\n    return  ({\n    rowLength: this.gridRowLength,\n    initialLoad: this.initialLoad,\n    loadRate: this.loadRate,\n    meanWater1: this.meanWater1,\n    varianceWater1: this.varianceWater1,\n    meanWater2: this.meanWater2,\n    varianceWater2: this.varianceWater2,\n    meanFood1: this.meanFood1,\n    varianceFood1: this.varianceFood1,\n    meanFood2: this.meanFood2,\n    varianceFood2: this.varianceFood2,\n    movementThirstDecay: this.movementThirstDecay,\n    movementHungerDecay: this.movementHungerDecay,\n    hungerUpperBound: this.hungerUpperBound,\n    hungerLowerBound: this.hungerLowerBound,\n    thirstUpperBound: this.thirstUpperBound,\n    thirstLowerBound: this.thirstLowerBound\n    });\n  }\n}\n\nexport default new ConfigurableValuesController();\n"]},"metadata":{},"sourceType":"module"}