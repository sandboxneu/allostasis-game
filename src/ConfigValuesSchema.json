{
    "description": "Allostasis game configuration values",
    "type": "object",
    "properties": {
        "gridRowLength": {
            "type": "integer",
            "description": "The number of rows in the grid"
        },
        "gridColumnLength": {
            "type": "integer",
            "description": "The number of columns in the grid"
        },
        "initialLoad": {
            "type": "number",
            "description": "Starting value for player's load (out of 100)"
        },
        "loadRate": {
            "type": "number",
            "description": "Load increase when one or more of the bars are in suboptimal range"
        },
        "meanWater1": {
            "type": "number",
            "description": "Mean reward from water 1"
        },
        "varianceWater1": {
            "type": "number",
            "description": "Variance of reward from water 1"
        },
        "meanWater2": {
            "type": "number",
            "description": "Mean reward from water 2"
        },
        "varianceWater2": {
            "type": "number",
            "description": "Variance of reward from water 2"
        },
        "meanFood1": {
            "type": "number",
            "description": "Mean reward from food 1"
        },
        "varianceFood1": {
            "type": "number",
            "description": "Variance of reward from food 1"
        },
        "meanFood2": {
            "type": "number",
            "description": "Mean reward from food 2"
        },
        "varianceFood2": {
            "type": "number",
            "description": "Variance of reward from food 2"
        },
        "movementThirstDecay": {
            "type": "number",
            "description": "Change thirst by this much on every game tick"
        },
        "movementHungerDecay": {
            "type": "number",
            "description": "Change hunger by this much on every game tick"
        },
        "hungerUpperBound": {
            "type": "number",
            "description": "The upper bound of the ideal range for hunger (out of 100)"
        },
        "hungerLowerBound": {
            "type": "number",
            "description": "The lower bound of the ideal range for hunger (out of 100)"
        },
        "thirstUpperBound": {
            "type": "number",
            "description": "The upper bound of the ideal range for thirst (out of 100)"
        },
        "thirstLowerBound": {
            "type": "number",
            "description": "The lower bound of the ideal range for thirst (out of 100)"
        },
        "shouldRelocateEntity": {
            "type": "boolean",
            "description": "Should the entity be relocated after interacting with it?"
        },
        "chooseStartingPositionOfEntities": {
            "type": "boolean",
            "description": "Do you want to specify the starting position for the entities?"
        },
        "foodOneXPosition": {
            "type": "number",
            "description": "Food #1 X Position"
        },
        "foodOneYPosition": {
            "type": "number",
            "description": "Food #1 Y Position"
        },
        "foodTwoXPosition": {
            "type": "number",
            "description": "Food #2 X Position"
        },
        "foodTwoYPosition": {
            "type": "number",
            "description": "Food #2 Y Position"
        },
        "waterOneXPosition": {
            "type": "number",
            "description": "Water #1 X Position"
        },
        "waterOneYPosition": {
            "type": "number",
            "description": "Water #1 Y Position"
        },
        "waterTwoXPosition": {
            "type": "number",
            "description": "Water #2 X Position"
        },
        "waterTwoYPosition": {
            "type": "number",
            "description": "Water #2 Y Position"
        }
    },
    "required": [
        "gridRowLength",
        "gridColumnLength",
        "initialLoad",
        "loadRate",
        "meanWater1",
        "varianceWater1",
        "meanWater2",
        "varianceWater2",
        "meanFood1",
        "varianceFood1",
        "meanFood2",
        "varianceFood2",
        "movementThirstDecay",
        "movementHungerDecay",
        "hungerUpperBound",
        "hungerLowerBound",
        "thirstUpperBound",
        "thirstLowerBound"
    ]
}
